Microsoft (R) Macro Assembler Version 14.00.23918.0	    04/19/16 01:43:08
main.asm						     Page 1 - 1


				; Projekat iz Racunarske elektronike
				; Studenti: Aleksandar Ivankovic 145/2012 i Jelena Puzovic 002/2012
				; Elektrotehnicki Fakultet u Beogradu	
				; april 2016.
				;	Program koji od ulaznog .pgm fajla (PGM - portable greyscale map) pravi .pgm sliku
				; koja je duplo manje velicine. Metod je decimacija niza stringova koji predstavljaju vrednost
				; (nijansu) piksela.
				; main.asm - Glavni asemblerski fajl
				; 
				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE macros.inc
			      C .NOLIST
			      C .LIST
			      C 

 = 000003E8			BUFFER_SIZE = 1000

 00000000			.data

 00000000  000003E8 [		bufferIn BYTE BUFFER_SIZE DUP(?)
	    00
	   ]
 000003E8  0000000A [		bufferOut BYTE 10 DUP(?)
	    00
	   ]
 000003F2  00000050 [		inputFileName BYTE 80 DUP(0)
	    00
	   ]
 00000442  00000050 [		outputFilename BYTE 80 DUP(0)
	    00
	   ]
 00000492 00000000		inputFileHandle HANDLE ?
 00000496 00000000		outputFileHandle HANDLE ?
 0000049A 00			pixCount BYTE 0
 0000049B 00000001		pixCount1 DWORD 1
 0000049F 00000001		pixCount2 DWORD 1
 000004A3 00000000		pixWidth DWORD 0
 000004A7 00000000		buffPtr DWORD 0
 000004AB 00000000		bytesRead DWORD 0
 000004AF 00000000		bytesWritten DWORD ?
 000004B3  00000004 [		numBuffer BYTE 4 DUP(?)
	    00
	   ]
				; flegovi
 000004B7 01			prepisuj BYTE 1
 000004B8 00			EOF_indicator BYTE 0
 000004B9 01			widthIndicator BYTE 1		
 000004BA 01			pixValueIndicator BYTE 1

 00000000			.code
				; rutina za 'dovlacenje' dodatnih BUFFER_SIZE bajtova iz fajla u bafer
 00000000			read_more_from_file proc 
 00000000  50				push eax
 00000001  52				push edx
 00000002  51				push ecx
					invoke ReadFile, inputFileHandle, OFFSET bufferIn, BUFFER_SIZE, OFFSET bytesRead, NULL	
 00000003  6A 00	   *	    push   +000000000h
 00000005  68 000004AB R   *	    push   dword  ptr OFFSET FLAT: bytesRead
 0000000A  68 000003E8	   *	    push   +0000003E8h
 0000000F  68 00000000 R   *	    push   dword  ptr OFFSET FLAT: bufferIn
 00000014  FF 35 00000492 R *	    push   inputFileHandle
 0000001A  E8 00000000 E   *	    call   ReadFile
 0000001F  C7 05 000004A7 R		mov buffPtr, OFFSET bufferIn
	   00000000 R
 00000029  83 F8 01			cmp eax, 1
 0000002C  74 13			je read_is_ok
					mWrite <"Error while getting more data from file. ", 0dh, 0ah>
 000004BB		     1		.data		
 000004BB 45 72 72 6F 72     1		??0000 BYTE "Error while getting more data from file. ", 0dh, 0ah,0	
	   20 77 68 69 6C
	   65 20 67 65 74
	   74 69 6E 67 20
	   6D 6F 72 65 20
	   64 61 74 61 20
	   66 72 6F 6D 20
	   66 69 6C 65 2E
	   20 0D 0A 00
 0000002E		     1		.code
 0000002E  52		     1		push	edx
 0000002F  BA 000004BB R     1		mov	edx,OFFSET ??0000
 00000034  E8 00000000 E     1		call	WriteString
 00000039  5A		     1		pop	edx
					exit
 0000003A  6A 00	   *	    push   +000000000h
 0000003C  E8 00000000 E   *	    call   ExitProcess
 00000041			read_is_ok:
 00000041  83 3D 000004AB R		cmp bytesRead, 0
	   00
 00000048  75 07			jne return
 0000004A  C6 05 000004B8 R		mov EOF_indicator, 1
	   01
 00000051			return:
 00000051  59				pop ecx
 00000052  5A				pop edx
 00000053  58				pop eax
 00000054  C3				ret
 00000055			read_more_from_file endp 

				; rutina za inkrementiranje pokazivaca na ulazni bafer, kao i
				; simultanu proveru da li treba 'dovuci' jos BUFFER_SIZE bajtova iz fajla u bafer
 00000055			checkBuffer proc
 00000055  50				push eax
 00000056  FF 05 000004A7 R		inc buffPtr
 0000005C  A1 000004A7 R		mov eax, buffPtr
 00000061  2D 000003E8			sub eax, BUFFER_SIZE
 00000066  3D 00000000 R		cmp eax, OFFSET bufferIn
 0000006B  75 05			jne bufferOK
 0000006D  E8 FFFFFF8E			call read_more_from_file
 00000072			bufferOK:
 00000072  58				pop eax
 00000073  C3				ret
 00000074			checkBuffer endp

				; rutina za konverziju decimalnog broja u string
				; koristi registre edx, ecx i edi i smesta novi string
				; u bafer sa pocetnom adresom u edi
				; vraca broj upisanih bajtova u registru eax
 00000074			intToString proc	
 00000074  52			    push  edx
 00000075  51			    push  ecx
 00000076  57			    push  edi
 00000077  55			    push  ebp
 00000078  8B EC		    mov   ebp, esp
 0000007A  B9 0000000A		    mov   ecx, 10
 0000007F			 pushDigits:
 0000007F  33 D2		    xor   edx, edx        ; zero-extend eax
 00000081  F7 F1		    div   ecx             ; divide by 10; now edx = next digit
 00000083  83 C2 30		    add   edx, 30h        ; decimal value + 30h => ascii digit
 00000086  52			    push  edx             ; push the whole dword, cause that's how x86 rolls
 00000087  85 C0		    test  eax, eax        ; leading zeros suck
 00000089  75 F4		    jnz   pushDigits
 0000008B			 popDigits:
 0000008B  58			    pop   eax
 0000008C  AA			    stosb                 ; don't write the whole dword, just the low byte
 0000008D  3B E5		    cmp   esp, ebp        ; if esp==ebp, we've popped all the digits
 0000008F  75 FA		    jne   popDigits
 00000091  33 C0		    xor   eax, eax        ; add trailing nul
 00000093  AA			    stosb
 00000094  8B C7		    mov   eax, edi
 00000096  5D			    pop   ebp
 00000097  5F			    pop   edi
 00000098  59			    pop   ecx
 00000099  5A			    pop   edx
 0000009A  2B C7		    sub   eax, edi        ; return number of bytes written
 0000009C  C3				ret
 0000009D			intToString endp

 0000009D			main proc
					; pripremanje fajlova
					mWrite "Unesite ime fajla slike za obradu: "
 000004E7		     1		.data		
 000004E7 55 6E 65 73 69     1		??0001 BYTE "Unesite ime fajla slike za obradu: ",0	
	   74 65 20 69 6D
	   65 20 66 61 6A
	   6C 61 20 73 6C
	   69 6B 65 20 7A
	   61 20 6F 62 72
	   61 64 75 3A 20
	   00
 0000009D		     1		.code
 0000009D  52		     1		push	edx
 0000009E  BA 000004E7 R     1		mov	edx,OFFSET ??0001
 000000A3  E8 00000000 E     1		call	WriteString
 000000A8  5A		     1		pop	edx
 000000A9  BA 000003F2 R		mov edx, OFFSET inputFileName
 000000AE  B9 00000050			mov ecx, SIZEOF inputFileName
 000000B3  E8 00000000 E		call ReadString
					mWrite "Unesite ime fajla za smestanje obradjene slike: "
 0000050B		     1		.data		
 0000050B 55 6E 65 73 69     1		??0002 BYTE "Unesite ime fajla za smestanje obradjene slike: ",0	
	   74 65 20 69 6D
	   65 20 66 61 6A
	   6C 61 20 7A 61
	   20 73 6D 65 73
	   74 61 6E 6A 65
	   20 6F 62 72 61
	   64 6A 65 6E 65
	   20 73 6C 69 6B
	   65 3A 20 00
 000000B8		     1		.code
 000000B8  52		     1		push	edx
 000000B9  BA 0000050B R     1		mov	edx,OFFSET ??0002
 000000BE  E8 00000000 E     1		call	WriteString
 000000C3  5A		     1		pop	edx
 000000C4  BA 00000442 R		mov edx, OFFSET outputFileName
 000000C9  B9 00000050			mov ecx, SIZEOF outputFileName
 000000CE  E8 00000000 E		call ReadString
 000000D3			open_input:
 000000D3  BA 000003F2 R		mov edx, OFFSET inputFileName
 000000D8  E8 00000000 E		call OpenInputFile
 000000DD  A3 00000492 R		mov inputFileHandle, eax
 000000E2  83 F8 FF			cmp eax, INVALID_HANDLE_VALUE
 000000E5  75 11			jne create_output
					mWrite<"Cannot open file", 0dh, 0ah>
 0000053C		     1		.data		
 0000053C 43 61 6E 6E 6F     1		??0003 BYTE "Cannot open file", 0dh, 0ah,0	
	   74 20 6F 70 65
	   6E 20 66 69 6C
	   65 0D 0A 00
 000000E7		     1		.code
 000000E7  52		     1		push	edx
 000000E8  BA 0000053C R     1		mov	edx,OFFSET ??0003
 000000ED  E8 00000000 E     1		call	WriteString
 000000F2  5A		     1		pop	edx
 000000F3  E9 00000333			jmp quit
 000000F8			create_output:
 000000F8  BA 00000442 R		mov  edx,OFFSET outputFilename
 000000FD  E8 00000000 E	    call CreateOutputFile
 00000102  A3 00000496 R	    mov  outputFilehandle, eax
 00000107  83 F8 FF			cmp eax, INVALID_HANDLE_VALUE
 0000010A  75 11			jne files_ok
					mWrite<"Cannot create file", 0dh, 0ah>
 0000054F		     1		.data		
 0000054F 43 61 6E 6E 6F     1		??0004 BYTE "Cannot create file", 0dh, 0ah,0	
	   74 20 63 72 65
	   61 74 65 20 66
	   69 6C 65 0D 0A
	   00
 0000010C		     1		.code
 0000010C  52		     1		push	edx
 0000010D  BA 0000054F R     1		mov	edx,OFFSET ??0004
 00000112  E8 00000000 E     1		call	WriteString
 00000117  5A		     1		pop	edx
 00000118  E9 00000304			jmp close_input_file
 0000011D			files_ok:
 0000011D  A1 00000492 R		mov eax, inputFileHandle
 00000122  BA 00000000 R		mov edx, OFFSET bufferIn
 00000127  B9 000003E8			mov ecx, BUFFER_SIZE
 0000012C  E8 00000000 E		call ReadFromFile ; ucitavanje prvih BUFFER_SIZE bajtova
					; kraj pripremanja fajlova
 00000131  73 16			jnc P2
					mWrite "Error reading file. "
 00000564		     1		.data		
 00000564 45 72 72 6F 72     1		??0005 BYTE "Error reading file. ",0	
	   20 72 65 61 64
	   69 6E 67 20 66
	   69 6C 65 2E 20
	   00
 00000133		     1		.code
 00000133  52		     1		push	edx
 00000134  BA 00000564 R     1		mov	edx,OFFSET ??0005
 00000139  E8 00000000 E     1		call	WriteString
 0000013E  5A		     1		pop	edx
 0000013F  E8 00000000 E		call WriteWindowsMsg
 00000144  E9 000002CE			jmp close_files
					; prepisivanje 'magicnog broja' P2
 00000149			P2:	
 00000149  FC				cld
 0000014A  B9 00000003			mov ecx, 3
 0000014F  BE 00000000 R		mov esi, OFFSET bufferIn
 00000154  BF 000003E8 R		mov edi, OFFSET bufferOut
 00000159  F3/ A4			rep movsb
 0000015B  C6 05 000003EB R		mov bufferOut[3], 0ah
	   0A
 00000162  A1 00000496 R		mov  eax, outputFileHandle
 00000167  BA 000003E8 R	    mov  edx, OFFSET bufferOut
 0000016C  B9 00000004		    mov  ecx, 4
 00000171  E8 00000000 E	    call WriteToFile
 00000176  0F 82 0000028F	    jc   error_writing
 0000017C  01 05 000004AF R	    add  bytesWritten,eax	
 00000182  89 35 000004A7 R		mov buffPtr, esi
 00000188  C6 05 000004B9 R		mov widthIndicator, 1
	   01
					; kraj prepisivanja P2
					
					; citanje karaktera iz ulaznog bafera
					; odavde se skace na delove za obradu odredjenih delova fajla
 0000018F			read_char:
 0000018F  80 3D 000004B8 R		cmp EOF_indicator, 1
	   01
 00000196  0F 84 0000027B		je close_files
 0000019C  8B 15 000004A7 R		mov edx, buffPtr
 000001A2  8A 02			mov al, [edx]
 000001A4  3C 23			cmp al, '#'
 000001A6  0F 84 00000104		je comment_sign
 000001AC  80 3D 000004B9 R		cmp widthIndicator, 1
	   01
 000001B3  74 12			je width_scaling
 000001B5  80 3D 000004BA R		cmp pixValueIndicator, 1
	   01
 000001BC  0F 84 0000010F		je pix_value_prepisi
 000001C2  E9 0000015A			jmp obrada
					; deo za prepisivanje i korekciju informacije o visini i sirini slike (dele se sa 2)
 000001C7			width_scaling:
 000001C7  B9 00000000			mov ecx, 0
 000001CC			load_width:	
 000001CC  8B 15 000004A7 R		mov edx, buffPtr
 000001D2  8A 02			mov al, [edx]
 000001D4  E8 00000000 E		call IsDigit
 000001D9  75 0E			jnz width_not_digit
 000001DB  88 81 000004B3 R		mov numBuffer[ecx], al
 000001E1  41				inc ecx
 000001E2  E8 FFFFFE6E			call checkBuffer
 000001E7  EB E3			jmp load_width	
 000001E9			width_not_digit:
 000001E9  BA 000004B3 R		mov edx, OFFSET numBuffer
 000001EE  E8 00000000 E		call ParseDecimal32
 000001F3  A3 000004A3 R		mov pixWidth, eax
 000001F8  D1 E8			shr eax, 1	
 000001FA  83 F8 64			cmp eax, 100
 000001FD  72 02			jb new_width_under100
 000001FF  EB 05			jmp width_cont
 00000201			new_width_under100:
 00000201  B9 00000002			mov ecx, 2
 00000206			width_cont:
 00000206  BF 000004B3 R		mov edi, OFFSET numBuffer
 0000020B  E8 FFFFFE64			call intToString
 00000210  C6 81 000004B3 R		mov  numBuffer[ecx], 20h
	   20
 00000217  41				inc ecx
 00000218  A1 00000496 R		mov  eax, outputFileHandle
 0000021D  BA 000004B3 R	    mov  edx, OFFSET numBuffer
 00000222  E8 00000000 E	    call WriteToFile
 00000227  0F 82 000001DE		jc   error_writing
 0000022D  01 05 000004AF R	    add  bytesWritten,eax	
 00000233  C6 05 000004B9 R		mov widthIndicator, 0
	   00
 0000023A  E8 FFFFFE16			call checkBuffer
 0000023F			height_scaling:
 0000023F  B9 00000000			mov ecx, 0
 00000244			load_height:
 00000244  8B 15 000004A7 R		mov edx, buffPtr
 0000024A  8A 02			mov al, [edx]
 0000024C  E8 00000000 E		call IsDigit
 00000251  75 0E			jnz height_not_digit
 00000253  88 81 000004B3 R		mov numBuffer[ecx], al
 00000259  41				inc ecx
 0000025A  E8 FFFFFDF6			call checkBuffer
 0000025F  EB E3			jmp load_height	
 00000261			height_not_digit:
 00000261  BA 000004B3 R		mov edx, OFFSET numBuffer
 00000266  E8 00000000 E		call ParseDecimal32
 0000026B  D1 E8			shr eax, 1
 0000026D  83 F8 64			cmp eax, 100
 00000270  72 02			jb  new_height_under100
 00000272  EB 05			jmp cont_height
 00000274			new_height_under100:
 00000274  B9 00000002			mov ecx, 2
 00000279			cont_height:
 00000279  BF 000004B3 R		mov edi, OFFSET numBuffer
 0000027E  E8 FFFFFDF1			call intToString
 00000283  C6 81 000004B3 R		mov numBuffer[ecx], 0ah
	   0A
 0000028A  41				inc ecx
 0000028B  A1 00000496 R		mov  eax, outputFileHandle
 00000290  BA 000004B3 R	    mov  edx, OFFSET numBuffer
 00000295  E8 00000000 E	    call WriteToFile
 0000029A  0F 82 0000016B		jc   error_writing
 000002A0  01 05 000004AF R	    add  bytesWritten,eax	
 000002A6  E8 FFFFFDAA			call checkBuffer
 000002AB  E9 FFFFFEDF			jmp read_char
					; kraj dela za prepisivanje i korekciju informacije o visini i sirini slike
					; deo za obradu komentara, kad god se naidje na liniju koja pocinje znakom '#', ta linija se preskace
 000002B0			comment_sign:
 000002B0  FF 05 000004AF R		inc bytesWritten
 000002B6  E8 FFFFFD9A			call checkBuffer
 000002BB  8B 15 000004A7 R		mov edx, buffPtr
 000002C1  8A 02			mov al, [edx]
 000002C3  3C 0A			cmp al, 0ah
 000002C5  75 E9			jne comment_sign
 000002C7  E8 FFFFFD89			call checkBuffer
 000002CC  E9 FFFFFEBE			jmp read_char
					; kraj dela za obradu komentara
					; deo za prepisivanje informacije o maksimalnoj vrednosti piksela
 000002D1			pix_value_prepisi:	
 000002D1  B9 00000003			mov ecx, 3
 000002D6  8B 35 000004A7 R		mov esi, buffPtr
 000002DC  BF 000004B3 R		mov edi, OFFSET numBuffer
 000002E1  F3/ A4			rep movsb
 000002E3  89 35 000004A7 R		mov buffPtr, esi
 000002E9  E8 FFFFFD67			call checkBuffer
 000002EE  C6 05 000004B6 R		mov numBuffer[3], 0ah
	   0A
 000002F5  A1 00000496 R		mov  eax, outputFileHandle
 000002FA  BA 000004B3 R	    mov  edx, OFFSET numBuffer
 000002FF  B9 00000004		    mov  ecx, 4
 00000304  E8 00000000 E	    call WriteToFile
 00000309  0F 82 000000FC		jc   error_writing
 0000030F  01 05 000004AF R	    add  bytesWritten,eax	
 00000315  C6 05 000004BA R		mov pixValueIndicator, 0
	   00
 0000031C  E9 FFFFFE6E			jmp read_char
					; kraj dela za prepisivanje informacije o maksimalnoj vrednosti piksela	

					; pocetak obrade (decimacije) niza piksela
					; algoritam je sledeci:
					; pixCount1 je brojac koji pokazuje koji se piksel u okviru vrste trenutno analizira (broj kolone)
					; pixCount2 je brojac koji pokazuje broj vrste
					; prepisuje se broj dok se ne stigne do znaka za razmak (20h)
					; kad se stigne do znaka za razmak, inkrementira se pixCount1
					; proverava se da li je pixCount1 paran broj, ako jeste onda se resetuje flag prepisuj,
					; ako nije, proverava se pixCount2 na isti nacin
					; ako je pixCount1 dosao do kraja vrste, resetuje se, a pixCount2 se inkrementira
					; ako je fleg prepisuj setovan, onda se piksel ispisuje u izlazni fajl
					; svaki put kad brojac pixCount dobroji do neke odredjene vrednosti,
					; upisuje se znak za novi red (0ah). Ovime se zadovoljava preporuka standarda
					; PGMA da u svakom redu ne bude vise od 70 karaktera
 00000321			obrada:
 00000321  3C 0A			cmp al, 0ah
 00000323  75 0A			jne not_newline
 00000325  E8 FFFFFD2B			call checkBuffer	
 0000032A  E9 FFFFFE60			jmp read_char
 0000032F			not_newline:
 0000032F  3C 20			cmp al, 20h
 00000331  74 05			je toggle_prepisi
 00000333  E9 00000087			jmp nije_razmak
 00000338			toggle_prepisi:
 00000338  FF 05 0000049B R		inc pixCount1
 0000033E  A1 000004A3 R		mov eax, pixWidth
 00000343  3B 05 0000049B R		cmp eax, pixCount1
 00000349  75 12			jne leave_count2
 0000034B  FF 05 0000049F R		inc pixCount2
 00000351  C7 05 0000049B R		mov pixCount1, 1
	   00000001
 0000035B  EB 17			jmp reset_prepisuj
 0000035D			leave_count2:
 0000035D  B8 00000001			mov eax, 01h
 00000362  85 05 0000049B R		test eax, pixCount1
 00000368  74 0A			jz reset_prepisuj
 0000036A  85 05 0000049F R		test eax, pixCount2
 00000370  74 02			jz reset_prepisuj
 00000372  EB 09			jmp set_prepisuj
 00000374			reset_prepisuj:
 00000374  C6 05 000004B7 R		mov prepisuj, 0
	   00
 0000037B  EB 07			jmp cont
 0000037D			set_prepisuj:
 0000037D  C6 05 000004B7 R		mov prepisuj, 1
	   01
 00000384			cont:
 00000384  FE 05 0000049A R		inc pixCount
 0000038A  80 3D 0000049A R		cmp pixCount, 36
	   24
 00000391  74 02			je reset_pix_count
 00000393  EB 2A			jmp nije_razmak
 00000395			reset_pix_count:
 00000395  C6 05 0000049A R		mov pixCount, 0
	   00
 0000039C  C6 05 000003E8 R		mov bufferOut[0], 0ah
	   0A
 000003A3  A1 00000496 R		mov  eax, outputFileHandle
 000003A8  BA 000003E8 R	    mov  edx, OFFSET bufferOut
 000003AD  B9 00000001		    mov  ecx, 1
 000003B2  E8 00000000 E		call WriteToFile
 000003B7  72 52			jc   error_writing
 000003B9  01 05 000004AF R	    add  bytesWritten,eax	
 000003BF			nije_razmak:	
 000003BF  80 3D 000004B7 R		cmp prepisuj, 1	
	   01
 000003C6  74 0A			je prepisivanje
 000003C8  E8 FFFFFC88			call checkBuffer
 000003CD  E9 FFFFFDBD			jmp read_char
 000003D2			prepisivanje:
 000003D2  FC				cld
 000003D3  B9 00000001			mov ecx, 1
 000003D8  8B 35 000004A7 R		mov esi, buffPtr
 000003DE  BF 000003E8 R		mov edi, OFFSET bufferOut
 000003E3  F3/ A4			rep movsb
 000003E5  A1 00000496 R		mov  eax, outputFileHandle
 000003EA  BA 000003E8 R	    mov  edx, OFFSET bufferOut
 000003EF  B9 00000001		    mov  ecx, 1
 000003F4  E8 00000000 E		call WriteToFile
 000003F9  72 10			jc   error_writing
 000003FB  01 05 000004AF R	    add  bytesWritten,eax	
 00000401  E8 FFFFFC4F			call checkBuffer		
 00000406  E9 FFFFFD84			jmp read_char
					; kraj dela za obradu piksela

					; detekcija greske
 0000040B			error_writing:
					mWrite <"Error while writing to file. ", 0dh, 0ah>
 00000579		     1		.data		
 00000579 45 72 72 6F 72     1		??0006 BYTE "Error while writing to file. ", 0dh, 0ah,0	
	   20 77 68 69 6C
	   65 20 77 72 69
	   74 69 6E 67 20
	   74 6F 20 66 69
	   6C 65 2E 20 0D
	   0A 00
 0000040B		     1		.code
 0000040B  52		     1		push	edx
 0000040C  BA 00000579 R     1		mov	edx,OFFSET ??0006
 00000411  E8 00000000 E     1		call	WriteString
 00000416  5A		     1		pop	edx
					
					; zavrsni deo programa, zatvaranje fajlova i izlazak
 00000417			close_files:
 00000417  A1 00000496 R		mov eax, outputFileHandle
 0000041C  E8 00000000 E		call CloseFile
 00000421			close_input_file:
 00000421  A1 00000492 R		mov eax, inputFileHandle
 00000426  E8 00000000 E		call CloseFile
 0000042B			quit:
					exit	
 0000042B  6A 00	   *	    push   +000000000h
 0000042D  E8 00000000 E   *	    call   ExitProcess
 00000432			main ENDP
				END main

Microsoft (R) Macro Assembler Version 14.00.23918.0	    04/19/16 01:43:08
main.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

IsDefined  . . . . . . . . . . .	Func
Startup  . . . . . . . . . . . .	Proc
mDumpMem . . . . . . . . . . . .	Proc
mDump  . . . . . . . . . . . . .	Proc
mGotoxy  . . . . . . . . . . . .	Proc
mReadString  . . . . . . . . . .	Proc
mShowRegister  . . . . . . . . .	Proc
mShow  . . . . . . . . . . . . .	Proc
mWriteLn . . . . . . . . . . . .	Proc
mWriteSpace  . . . . . . . . . .	Proc
mWriteString . . . . . . . . . .	Proc
mWrite . . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000599 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000432 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
checkBuffer  . . . . . . . . . .	P Near	 00000055 _TEXT	Length= 0000001F Public STDCALL
  bufferOK . . . . . . . . . . .	L Near	 00000072 _TEXT	
intToString  . . . . . . . . . .	P Near	 00000074 _TEXT	Length= 00000029 Public STDCALL
  pushDigits . . . . . . . . . .	L Near	 0000007F _TEXT	
  popDigits  . . . . . . . . . .	L Near	 0000008B _TEXT	
main . . . . . . . . . . . . . .	P Near	 0000009D _TEXT	Length= 00000395 Public STDCALL
  open_input . . . . . . . . . .	L Near	 000000D3 _TEXT	
  create_output  . . . . . . . .	L Near	 000000F8 _TEXT	
  files_ok . . . . . . . . . . .	L Near	 0000011D _TEXT	
  P2 . . . . . . . . . . . . . .	L Near	 00000149 _TEXT	
  read_char  . . . . . . . . . .	L Near	 0000018F _TEXT	
  width_scaling  . . . . . . . .	L Near	 000001C7 _TEXT	
  load_width . . . . . . . . . .	L Near	 000001CC _TEXT	
  width_not_digit  . . . . . . .	L Near	 000001E9 _TEXT	
  new_width_under100 . . . . . .	L Near	 00000201 _TEXT	
  width_cont . . . . . . . . . .	L Near	 00000206 _TEXT	
  height_scaling . . . . . . . .	L Near	 0000023F _TEXT	
  load_height  . . . . . . . . .	L Near	 00000244 _TEXT	
  height_not_digit . . . . . . .	L Near	 00000261 _TEXT	
  new_height_under100  . . . . .	L Near	 00000274 _TEXT	
  cont_height  . . . . . . . . .	L Near	 00000279 _TEXT	
  comment_sign . . . . . . . . .	L Near	 000002B0 _TEXT	
  pix_value_prepisi  . . . . . .	L Near	 000002D1 _TEXT	
  obrada . . . . . . . . . . . .	L Near	 00000321 _TEXT	
  not_newline  . . . . . . . . .	L Near	 0000032F _TEXT	
  toggle_prepisi . . . . . . . .	L Near	 00000338 _TEXT	
  leave_count2 . . . . . . . . .	L Near	 0000035D _TEXT	
  reset_prepisuj . . . . . . . .	L Near	 00000374 _TEXT	
  set_prepisuj . . . . . . . . .	L Near	 0000037D _TEXT	
  cont . . . . . . . . . . . . .	L Near	 00000384 _TEXT	
  reset_pix_count  . . . . . . .	L Near	 00000395 _TEXT	
  nije_razmak  . . . . . . . . .	L Near	 000003BF _TEXT	
  prepisivanje . . . . . . . . .	L Near	 000003D2 _TEXT	
  error_writing  . . . . . . . .	L Near	 0000040B _TEXT	
  close_files  . . . . . . . . .	L Near	 00000417 _TEXT	
  close_input_file . . . . . . .	L Near	 00000421 _TEXT	
  quit . . . . . . . . . . . . .	L Near	 0000042B _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
read_more_from_file  . . . . . .	P Near	 00000000 _TEXT	Length= 00000055 Public STDCALL
  read_is_ok . . . . . . . . . .	L Near	 00000041 _TEXT	
  return . . . . . . . . . . . .	L Near	 00000051 _TEXT	
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Byte	 000004BB _DATA	
??0001 . . . . . . . . . . . . .	Byte	 000004E7 _DATA	
??0002 . . . . . . . . . . . . .	Byte	 0000050B _DATA	
??0003 . . . . . . . . . . . . .	Byte	 0000053C _DATA	
??0004 . . . . . . . . . . . . .	Byte	 0000054F _DATA	
??0005 . . . . . . . . . . . . .	Byte	 00000564 _DATA	
??0006 . . . . . . . . . . . . .	Byte	 00000579 _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
BUFFER_SIZE  . . . . . . . . . .	Number	 000003E8h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
EOF_indicator  . . . . . . . . .	Byte	 000004B8 _DATA	
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
buffPtr  . . . . . . . . . . . .	DWord	 000004A7 _DATA	
bufferIn . . . . . . . . . . . .	Byte	 00000000 _DATA	
bufferOut  . . . . . . . . . . .	Byte	 000003E8 _DATA	
bytesRead  . . . . . . . . . . .	DWord	 000004AB _DATA	
bytesWritten . . . . . . . . . .	DWord	 000004AF _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
inputFileHandle  . . . . . . . .	DWord	 00000492 _DATA	
inputFileName  . . . . . . . . .	Byte	 000003F2 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
numBuffer  . . . . . . . . . . .	Byte	 000004B3 _DATA	
outputFileHandle . . . . . . . .	DWord	 00000496 _DATA	
outputFilename . . . . . . . . .	Byte	 00000442 _DATA	
pixCount1  . . . . . . . . . . .	DWord	 0000049B _DATA	
pixCount2  . . . . . . . . . . .	DWord	 0000049F _DATA	
pixCount . . . . . . . . . . . .	Byte	 0000049A _DATA	
pixValueIndicator  . . . . . . .	Byte	 000004BA _DATA	
pixWidth . . . . . . . . . . . .	DWord	 000004A3 _DATA	
prepisuj . . . . . . . . . . . .	Byte	 000004B7 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
white  . . . . . . . . . . . . .	Number	 0000000Fh   
widthIndicator . . . . . . . . .	Byte	 000004B9 _DATA	
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
